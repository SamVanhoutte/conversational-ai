# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  AZURE_WEBAPP_NAME: WallStreetBots   # set this to your application's name
  AZURE_WEBAPP_PACKAGE_PATH: './src/03-bot/NasdaqBot'      # set this to the path to your web app project, defaults to the repository root
  DOTNET_VERSION: '3.1.x'           # set this to the dot net version to use
  
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    environment: dev

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Setup .NET Core SDK
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }} 
      
      # Run dotnet build and publish
      - name: dotnet build and publish
        run: |
          dotnet restore
          dotnet build --configuration Release
          dotnet publish -c Release -o '${{ env.AZURE_WEBAPP_PACKAGE_PATH }}/myapp' 
      
      # Deploy to Azure Web apps
      - name: 'Run Azure webapp deploy action using publish profile credentials'
        uses: azure/webapps-deploy@v2
        with: 
          app-name: ${{ env.AZURE_WEBAPP_NAME }} # Replace with your app name
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE  }} # Define secret variable in repository settings as per action documentation
          package: '${{ env.AZURE_WEBAPP_PACKAGE_PATH }}/myapp'
          
      - name: Azure App Service Settings
        uses: Azure/appservice-settings@v1
        with:
          # Name of the Azure Web App
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          # Name of an existing slot other than the production slot. Default value is production
          slot-name: production
          # Application settings using the JSON syntax set as value of secret variable: APP_SETTINGS
          app-settings-json: '[{
                                  "name": "LuisAppId",
                                  "value": "${{ secrets.LuisAppId }}",
                                  "slotSetting": false
                                },
                                {
                                  "name": "LuisAPIKey",
                                  "value": "${{ secrets.LuisAPIKey }}",
                                  "slotSetting": false
                                },
                                {
                                  "name": "LuisAPIHostName",
                                  "value": "${{ secrets.LuisAPIHostName }}",
                                  "slotSetting": false
                                },
                                {
                                  "name": "TranslatorKey",
                                  "value": "${{ secrets.TranslatorKey }}",
                                  "slotSetting": false
                                },
                                {
                                  "name": "LanguageDetectionKey",
                                  "value": "${{ secrets.LanguageDetectionKey }}",
                                  "slotSetting": false
                                },
                                {
                                  "name": "LanguageDetectionEndpoint",
                                  "value": "${{ secrets.LanguageDetectionEndpoint }}",
                                  "slotSetting": false
                                }]'
